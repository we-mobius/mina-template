(()=>{"use strict";const t=t=>"[object Number]"===Object.prototype.toString.call(t),e=t=>"[object Undefined]"===Object.prototype.toString.call(t),r=t=>t&&"[object Function]"===Object.prototype.toString.call(t),i=t=>"[object Object]"===Object.prototype.toString.call(t),o=t=>(t=>"[object String]"===Object.prototype.toString.call(t))(t)&&0===t.length,s=t=>(t=>"[object Array]"===Object.prototype.toString.call(t))(t)&&0===t.length,a=t=>{return(t=>"[object Null]"===Object.prototype.toString.call(t))(t)||e(t)||o(t)||s(t)||i(r=t)&&0===Object.keys(r).length||i(t)&&t.isEmpty;var r},n=t=>t,u=t=>d((t=>!t),t),h=t=>i(t)&&Object.prototype.hasOwnProperty.call(t,"isArgPlaceholder")&&t.isArgPlaceholder,c=(t,e,...r)=>{let i=e||[];i=i.map((t=>h(t)&&r.length>0?r.shift():t)),i=i.concat(r);const o=t.length,s=i.slice(0,o);return s.filter(u(h)).length>=o?t(...s):(...e)=>c(t,s,...e)},l=(t,...e)=>c(t,[],...e),p=(t,e,r,...i)=>{let o=r||[];o=o.map((t=>h(t)&&i.length>0?i.shift():t)),o=o.concat(i);const s=o.slice(0,t);return s.filter(u(h)).length>=t?e(...s):(...r)=>p(t,e,s,...r)},g=(t,e,...r)=>p(t,e,[],...r),y=(t,e,r,...i)=>{let o=r||[];o=o.map((t=>h(t)&&i.length>0?i.shift():t)),o=o.concat(i);return o.slice(0,t).filter(u(h)).length>=t?e(...o):(...r)=>y(t,e,o,...r)},m=(t,e,...r)=>y(t,e,[],...r),f=(...t)=>t.reduce(((t,e)=>(...r)=>e(t(...r))),t.shift()||n),b=(...t)=>f(...t.reverse()),d=b,w=f,T=t=>(e,i)=>t(e,((...t)=>{const e=t[t.length-1];if(!e[i])throw Error(`Can not find "${i}" method in target.'`);if(!r(e[i]))throw Error(`"${i}" property in target is not a function.`);return e[i](...t.slice(0,t.length-1))}));T(g),T(m),l(((t,e)=>g(t,e))),l(((t,e)=>m(t,e)));class _{constructor(t){if(new.target===_)throw new Error("BaseMediator can not be instantiated!");this._atom=t}get isMediator(){return!0}get atom(){return this._atom}get isAtom(){return this._atom.isAtom}get isData(){return this._atom.isData}get isMutation(){return this._atom.isMutation}get isEmpty(){return this._atom.isEmpty}get datar(){if(this.isData)return this._atom.datar;throw new TypeError('There is no "datar" property on Mutation instance.')}get value(){if(this.isData)return this._atom.value;throw new TypeError('There is no "value" property on Mutation instance.')}get mutator(){if(this.isMutation)return this._atom.mutator;throw new TypeError('There is no "mutator" property on Data instance.')}get operation(){if(this.isMutation)return this._atom.operation;throw new TypeError('There is no "operation" property on Data instance.')}subscribe(...t){return this._atom.subscribe(...t)}trigger(...t){return this._atom.trigger(...t)}triggerValue(...t){if(this.isData)return this._atom.triggerValue(...t);throw new TypeError('There is no "triggerValue" method on Mutation instance.')}triggerOperation(...t){if(this.isMutation)return this._atom.triggerOperation(...t);throw new TypeError('There is no "triggerOperation" method on Data instance.')}observe(...t){return this._atom.observe(...t)}beObservedBy(...t){return this._atom.beObservedBy(...t)}mutate(...t){return this._atom.mutate(...t)}registerTrigger(...t){return this._atom.registerTrigger(...t)}pipe(...t){return w(...t)(this)}compose(...t){return d(...t)(this)}release(){this._atom=null}}class v extends _{constructor(t,e=1){super(t),this._history=[],this._consumers=[],this.setReplayTime(e),this._subscribeController=t.subscribe((t=>{this._history.push(t),this._setHistory()}))}get type(){return"ReplayMediator"}get isReplayMediator(){return!0}static of(e,r){if(!i(o=e)||!o.isAtom)throw new TypeError("ReplayMediator can apply to an Atom (Data or Mutation) only.");var o;if((t=>i(t)&&t.isReplayMediator)(e))return e;let s={};t(r)?s.replayTime=r:i(r)&&(s={...s,...r});const{replayTime:a,autoTrigger:n=!1}=s,u=new v(e,a);return n&&e.trigger(),u}setReplayTime(e){if(!t(e))throw new TypeError("repalyTime is expected to be a Number.");this._replayTime=Math.floor(Math.abs(e)),this._setHistory()}_setHistory(){const t=this._history.length-this._replayTime;this._history=this._history.slice(t>=0?t:0)}replayTo(t){this._history.forEach((e=>{t(e)}))}replay(){this._consumers.forEach((t=>{this.replayTo(t)}))}subscribe(t){this._consumers.push(t);const e=this._atom.subscribe(t);return this.replayTo(t),e}beObservedBy(...t){return t[0].observe(this)}release(){this._subscribeController.unsubscribe(),super.release()}}g(2,((t,e)=>v.of(e,{replayTime:t,autoTrigger:!1})));const E=g(2,((t,e)=>v.of(e,{replayTime:t,autoTrigger:!0}))),M=t=>i(t)&&t.isDatar,O=t=>i(t)&&t.isMutator,D=t=>r(t)&&t.isVacuo;new class{get isVoid(){return!0}};new class{get isTerminator(){return!0}};const j=(()=>{const t=function(){};return Object.defineProperty(t,"isVacuo",{get:()=>!0}),Object.defineProperty(t,"isEmpty",{get:()=>!0}),t})();class V{constructor(t,r=j){if(!e(r)&&!O(r)&&!D(r))throw new TypeError("Only the Mutator or Vacuo type of particle is expected to be received as 2nd parameter of Datar particle constructor.");this.value=t,this.mutator=r}static of(t){return new V(t)}static empty(){return new V(j)}get isDatar(){return!0}get isEmpty(){return D(this.value)}fill(t){if(!O(t)&&!D(t))throw new TypeError('Only the Mutator or Vacuo type of particle is expected to be received by "fill" method of Datar particle.');return this.mutator=t,this}run(t=j){if(!O(t)&&!D(t))throw new TypeError('Only the Mutator or Vacuo type of particle is expected to be received by "run" method of Datar particle.');return O(t)?t.operation:t}}const S=t=>{if(!r(t))throw new TypeError("operation must be the type of Function.")},x=t=>M(t)||D(t);class A{constructor(t,r=j){if(!e(r)&&!x(r))throw new TypeError("Only the Datar or Vacuo type of particle is expected to be received as 2nd parameter of Mutator particle constructor.");S(t),this.operation=t,this.datar=r}static of(t){return new A(t)}static empty(){return new A(j)}get isMutator(){return!0}get isEmpty(){return D(this.operation)}static checkOperation(t){S(t)}static isValidOpTar(t){return x(t)}static lift(t,e){const{type:r}=e;if("both"===r)return this.liftBoth(t);if("left"===r)return this.liftLeft(t);if("right"===r)return this.liftRight(t);throw new TypeError(`"type" of lift must be one of "both" | "left" | "right", but receives "${r}"`)}static liftBoth(t){return S(t),m(2,((e,r,...i)=>t(x(e)?e.value:e,x(r)?r.value:r,...i)))}static liftLeft(t){return S(t),m(2,((e,r,...i)=>t(x(e)?e.value:e,r,...i)))}static liftRight(t){return S(t),m(2,((e,r,...i)=>t(e,x(r)?r.value:r,...i)))}fill(t){if(!x(t))throw new TypeError('Only the Datar or Vacuo type of particle is expected to be received by "fill" method of Mutator particle.');return this.datar=t,this}run(t=j,...e){return this.operation(this.datar,x(t)?t:V.of(t),...e)}}const R=t=>i(t)&&t.isMutation;class P extends class{get isAtom(){return!0}pipe(...t){return w(...t)(this)}compose(...t){return d(...t)(this)}}{constructor(t){super(),M(t)?this._datar=t:this._datar=V.of(t),this._consumers=new Set}get type(){return"DataAtom"}get isData(){return!0}get isEmpty(){return this._datar.isEmpty}static of(t){return new P(t)}static empty(){return new P(V.empty())}get datar(){return this._datar}get value(){return this._datar.value}subscribe(t){return this._consumers.add(t),{unsubscribe:()=>this._consumers.delete(t)}}trigger(t){if(!e(t)&&!M(t))throw new TypeError("Data must be triggered with a Datar.");const r=t||this.datar;a(r)||this._consumers.forEach((t=>{t(r)}))}triggerValue(t){return this.trigger(V.of(t))}observe(t){if(!R(t))throw new TypeError("Data can only observe a Mutation!");return t.subscribe((t=>{this.mutate(t)}))}beObservedBy(t){return t.observe(this)}mutate(t){let e=null;if(O(t))e=t;else if(R(t))e=t.mutator;else{if(!r(t))throw new TypeError('Param of "mutate" must be a Mutation or a Mutator or a normal Function.');e=A.of(t)}const o=V.of(e.run(this._datar)).fill(e);var s;return s=o.value,i(s)&&s.isTerminator||(this._datar=o,this.trigger()),this}registerTrigger(t,{forceWrap:e=!1}={}){return t(((...t)=>(M(t[0])&&!e||(t[0]=V.of(t[0])),this.trigger(...t))))}}const B={};var k;B[k="app"]=B[k]||(()=>{const t=wx.getSystemInfoSync().theme,e=E(1,P.of(t));return wx.onThemeChange((({theme:t})=>{e.triggerValue(t)})),{themeRD:e}})(),B[k];const F=E(1,P.of("The owner is looking for a job as a product manager | business manager.\n\nFor a quickest preview of his info, check https://www.cigaret.world"));App({onLaunch(t){F.subscribe((({value:t})=>{}))},onError(t){},onPageNotFound({path:t,isEntryPage:e}){},onUnhandledRejection({reason:t}){}})})();
//# sourceMappingURL=app.js.map